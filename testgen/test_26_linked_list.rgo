list: ((@int, list)) // recursive type 
nil: (cb:(@int, list)){}
cons: (h:@int, t:list, cb:(@int, list)){
    cb(h, t)
}
iterate: (head:@int, tail: list){
    @printf("%d\n", head)
    tail(iterate) // if tail is nil, it does nothing 
}
mylist: cons(1, cons(2, cons(3, cons(4, nil)))) // TODO: when the target type is ptr, then the arg type can also be a ptr?
mylist(iterate)
