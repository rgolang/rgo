list: ((@int, list), ()) // recursive type 
nil: (cb:(@int, list), end:()){end()}
cons: (h:@int, t:list, cb:(@int, list)){
    cb(h, t)
}
iterate: (head:@int, tail: list){
    @printf("%d\n", head)
    tail(iterate, (){
        @printf("%s\n", "end")
    }) 
}
mylist: cons(1, cons(2, cons(3, cons(4, nil))))
mylist(iterate)
